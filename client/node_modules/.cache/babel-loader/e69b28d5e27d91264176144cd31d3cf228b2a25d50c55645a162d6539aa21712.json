{"ast":null,"code":"var _jsxFileName = \"/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = ({\n  data\n}) => {\n  _s();\n  useEffect(() => {\n    if (data.length > 0) {\n      const chartData = {};\n      const keys = [...new Set(data.map(item => `${item.region} ${item.type} ${item.surface}`))];\n      const colors = generateRandomColors(keys.length);\n      data.forEach(item => {\n        const key = `${item.region}: ${item.type}, ${item.surface}`;\n        if (!chartData[key]) {\n          chartData[key] = [];\n        }\n        chartData[key].push({\n          x: `${item.year} Q${item.quarter}`,\n          y: item.price,\n          surface: item.surface\n        });\n      });\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n      const datasets = Object.keys(chartData).map((key, index) => {\n        const color = colors[index];\n        return {\n          label: key,\n          data: chartData[key],\n          backgroundColor: color,\n          borderColor: color.replace('0.5', '1'),\n          borderWidth: 1,\n          pointRadius: 5,\n          pointHoverRadius: 8,\n          showLine: true\n        };\n      });\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          datasets: datasets\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Rok i kwartał'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Średnia cena (zł)'\n              }\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  const dataPoint = context.raw;\n                  return `Powierzchnia: ${dataPoint.surface} m², Cena: ${dataPoint.y} zł`;\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [data]);\n  const generateRandomColors = numColors => {\n    const colors = [];\n    for (let i = 0; i < numColors; i++) {\n      const color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n      colors.push(color);\n    }\n    return colors;\n  };\n  const downloadChart = () => {\n    const link = document.createElement('a');\n    link.href = chartInstance.toBase64Image();\n    link.download = 'chart.png';\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), chartInstance && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadChart,\n      children: \"Pobierz wykres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(ChartComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","Chart","jsxDEV","_jsxDEV","ChartComponent","data","_s","length","chartData","keys","Set","map","item","region","type","surface","colors","generateRandomColors","forEach","key","push","x","year","quarter","y","price","ctx","document","getElementById","getContext","existingChart","getChart","destroy","datasets","Object","index","color","label","backgroundColor","borderColor","replace","borderWidth","pointRadius","pointHoverRadius","showLine","options","scales","title","display","text","plugins","tooltip","callbacks","context","dataPoint","raw","numColors","i","Math","floor","random","downloadChart","link","createElement","href","chartInstance","toBase64Image","download","click","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChartComponent = ({ data }) => {\n    useEffect(() => {\n        if (data.length > 0) {\n            const chartData = {};\n            const keys = [...new Set(data.map(item => `${item.region} ${item.type} ${item.surface}`))];\n            const colors = generateRandomColors(keys.length);\n\n            data.forEach(item => {\n                const key = `${item.region}: ${item.type}, ${item.surface}`;\n                if (!chartData[key]) {\n                    chartData[key] = [];\n                }\n                chartData[key].push({ x: `${item.year} Q${item.quarter}`, y: item.price, surface: item.surface });\n            });\n\n            const ctx = document.getElementById('myChart').getContext('2d');\n            const existingChart = Chart.getChart(ctx);\n            if (existingChart) {\n                existingChart.destroy();\n            }\n\n            const datasets = Object.keys(chartData).map((key, index) => {\n                const color = colors[index];\n                return {\n                    label: key,\n                    data: chartData[key],\n                    backgroundColor: color,\n                    borderColor: color.replace('0.5', '1'),\n                    borderWidth: 1,\n                    pointRadius: 5,\n                    pointHoverRadius: 8,\n                    showLine: true\n                };\n            });\n\n            new Chart(ctx, {\n                type: 'line',\n                data: {\n                    datasets: datasets\n                },\n                options: {\n                    scales: {\n                        x: {\n                            title: {\n                                display: true,\n                                text: 'Rok i kwartał'\n                            }\n                        },\n                        y: {\n                            title: {\n                                display: true,\n                                text: 'Średnia cena (zł)'\n                            },\n                        }\n                    },\n                    plugins: {\n                        tooltip: {\n                            callbacks: {\n                                label: function (context) {\n                                    const dataPoint = context.raw;\n                                    return `Powierzchnia: ${dataPoint.surface} m², Cena: ${dataPoint.y} zł`;\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }, [data]);\n\n    const generateRandomColors = (numColors) => {\n        const colors = [];\n        for (let i = 0; i < numColors; i++) {\n            const color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n            colors.push(color);\n        }\n        return colors;\n    };\n    const downloadChart = () => {\n        const link = document.createElement('a');\n        link.href = chartInstance.toBase64Image();\n        link.download = 'chart.png';\n        link.click();\n    };\n\n    return (\n        <div>\n            <canvas id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n            {chartInstance && <button onClick={downloadChart}>Pobierz wykres</button>}\n        </div>\n    );\n};\n\nexport default ChartComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}