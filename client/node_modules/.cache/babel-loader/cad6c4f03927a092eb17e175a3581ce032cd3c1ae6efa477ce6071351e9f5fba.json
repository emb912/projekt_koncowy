{"ast":null,"code":"var _jsxFileName = \"/Users/em/Desktop/IS/projekt_koncowy/client/src/components/data/FiltersForm.js\";\n// import React from 'react';\n// import '../../styles/FiltersForm.css';\n\n// const FiltersForm = ({\n//     filters,\n//     handleFilterChange,\n//     handleFilterSubmit,\n//     handleRadioChange,\n//     handleRadioClick,\n//     sortLabel\n// }) => {\n//     const wojewodztwa = [\n//         'DOLNOŚLĄSKIE', 'KUJAWSKO-POMORSKIE', 'LUBELSKIE', 'LUBUSKIE',\n//         'ŁÓDZKIE', 'MAŁOPOLSKIE', 'MAZOWIECKIE', 'OPOLSKIE',\n//         'PODKARPACKIE', 'PODLASKIE', 'POMORSKIE', 'ŚLĄSKIE',\n//         'ŚWIĘTOKRZYSKIE', 'WARMIŃSKO-MAZURSKIE', 'WIELKOPOLSKIE', 'ZACHODNIOPOMORSKIE'\n//     ];\n\n//     const lata = Array.from({ length: 2022 - 2012 + 1 }, (_, i) => 2012 + i);\n\n//     const powierzchnie = [\n//         'do 40 m2', 'od 40,1 do 60 m2', 'od 60,1 do 80 m2', 'od 80,1 m2'\n//     ];\n\n//     return (\n\n//         <div className=\"form-container my-3\">\n//             <p className=\"lead\">Filtrowanie danych</p>\n//             <form onSubmit={handleFilterSubmit} className=\"filters-form\">\n//                 <div className=\"form-group\">\n//                     <label className=\"inline-label\">\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"sortAsc\"\n//                             checked={filters.sort === '1'}\n//                             onChange={(event) => handleFilterChange({ target: { name: 'sort', value: event.target.checked ? '1' : '' } })}\n//                         />\n//                         {sortLabel}\n//                     </label>\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                     <label>\n//                         Wybierz województwo:\n//                         <select name=\"region\" value={filters.region} onChange={handleFilterChange}>\n//                             <option value=\"\">Wszystkie</option>\n//                             {wojewodztwa.map(woj => (\n//                                 <option key={woj} value={woj}>{woj}</option>\n//                             ))}\n//                         </select>\n//                     </label>\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                     <label>\n//                         Wybierz powierzchnię mieszkania:\n//                         <select name=\"surface\" value={filters.surface} onChange={handleFilterChange}>\n//                             <option value=\"\">Wszystkie</option>\n//                             {powierzchnie.map(sfc => (\n//                                 <option key={sfc} value={sfc}>{sfc}</option>\n//                             ))}\n//                         </select>\n//                     </label>\n//                 </div>\n\n//                 <fieldset className=\"form-group\">\n//                     Wybierz dane według roku:\n//                     <label className=\"inline-label\">\n//                         <input\n//                             type=\"radio\"\n//                             name=\"yearFilter\"\n//                             checked={filters.before === '1'}\n//                             value=\"1\"\n//                             onChange={(event) => handleRadioChange({ target: { name: 'before', value: event.target.checked ? '1' : '0' } })}\n//                             onClick={handleRadioClick}\n//                         />\n//                         Dane do roku\n//                     </label>\n//                     <label className=\"inline-label\">\n//                         <input\n//                             type=\"radio\"\n//                             name=\"yearFilter\"\n//                             checked={filters.after === '1'}\n//                             value=\"1\"\n//                             onChange={(event) => handleRadioChange({ target: { name: 'after', value: event.target.checked ? '1' : '0' } })}\n//                             onClick={handleRadioClick}\n//                         />\n//                         Dane od roku\n//                     </label>\n//                     <label className=\"inline-label\">\n//                         <input\n//                             type=\"radio\"\n//                             name=\"yearFilter\"\n//                             checked={filters.oneYear === '1'}\n//                             value=\"1\"\n//                             onChange={(event) => handleRadioChange({ target: { name: 'oneYear', value: event.target.checked ? '1' : '0' } })}\n//                             onClick={handleRadioClick}\n//                         />\n//                         Dane z roku\n\n//                     </label>\n//                 </fieldset>\n\n//                 <div className=\"form-group\">\n//                     <label>\n//                         Wybierz rok:\n//                         <select name=\"year\" value={filters.year} onChange={handleFilterChange}>\n//                             <option value=\"\">Wszystkie</option>\n//                             {lata.map(rok => (\n//                                 <option key={rok} value={rok}>{rok}</option>\n//                             ))}\n//                         </select>\n//                     </label>\n//                 </div>\n\n//                 <div class=\"row justify-content-start\">\n//                     <div class=\"col-6\"> <button type=\"submit\" className=\"submit-button\">Filtruj</button></div>\n//                     <div class=\"col-6\"><button type=\"reset\" className=\"submit-button\">Wyczyść filtry</button></div>\n//                 </div>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default FiltersForm;\n\nimport React from 'react';\nimport '../../styles/FiltersForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FiltersForm = ({\n  filters,\n  setFilters,\n  fetchData,\n  sortLabel\n}) => {\n  const handleFilterChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: value\n    }));\n  };\n  const handleRadioChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: value,\n      before: name === 'before' ? value : '0',\n      after: name === 'after' ? value : '0',\n      oneYear: name === 'oneYear' ? value : '0'\n    }));\n  };\n  const handleRadioClick = event => {\n    const {\n      name\n    } = event.target;\n    setFilters(prevFilters => ({\n      ...prevFilters,\n      [name]: prevFilters[name] ? '' : prevFilters[name]\n    }));\n  };\n  const handleFilterSubmit = event => {\n    event.preventDefault();\n    fetchData();\n  };\n  const wojewodztwa = ['DOLNOŚLĄSKIE', 'KUJAWSKO-POMORSKIE', 'LUBELSKIE', 'LUBUSKIE', 'ŁÓDZKIE', 'MAŁOPOLSKIE', 'MAZOWIECKIE', 'OPOLSKIE', 'PODKARPACKIE', 'PODLASKIE', 'POMORSKIE', 'ŚLĄSKIE', 'ŚWIĘTOKRZYSKIE', 'WARMIŃSKO-MAZURSKIE', 'WIELKOPOLSKIE', 'ZACHODNIOPOMORSKIE'];\n  const lata = Array.from({\n    length: 2022 - 2012 + 1\n  }, (_, i) => 2012 + i);\n  const powierzchnie = ['do 40 m2', 'od 40,1 do 60 m2', 'od 60,1 do 80 m2', 'od 80,1 m2'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container my-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: \"Filtrowanie danych\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFilterSubmit,\n      className: \"filters-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"sortAsc\",\n            checked: filters.sort === '1',\n            onChange: event => handleFilterChange({\n              target: {\n                name: 'sort',\n                value: event.target.checked ? '1' : ''\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), sortLabel]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Wybierz wojew\\xF3dztwo:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"region\",\n            value: filters.region,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Wszystkie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), wojewodztwa.map(woj => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: woj,\n              children: woj\n            }, woj, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Wybierz powierzchni\\u0119 mieszkania:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"surface\",\n            value: filters.surface,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Wszystkie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this), powierzchnie.map(sfc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: sfc,\n              children: sfc\n            }, sfc, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"form-group\",\n        children: [\"Wybierz dane wed\\u0142ug roku:\", /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"yearFilter\",\n            checked: filters.before === '1',\n            value: \"1\",\n            onChange: event => handleRadioChange({\n              target: {\n                name: 'before',\n                value: event.target.checked ? '1' : '0'\n              }\n            }),\n            onClick: handleRadioClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), \"Dane do roku\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"yearFilter\",\n            checked: filters.after === '1',\n            value: \"1\",\n            onChange: event => handleRadioChange({\n              target: {\n                name: 'after',\n                value: event.target.checked ? '1' : '0'\n              }\n            }),\n            onClick: handleRadioClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), \"Dane od roku\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"yearFilter\",\n            checked: filters.oneYear === '1',\n            value: \"1\",\n            onChange: event => handleRadioChange({\n              target: {\n                name: 'oneYear',\n                value: event.target.checked ? '1' : '0'\n              }\n            }),\n            onClick: handleRadioClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 25\n          }, this), \"Dane z roku\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Wybierz rok:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"year\",\n            value: filters.year,\n            onChange: handleFilterChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Wszystkie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this), lata.map(rok => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: rok,\n              children: rok\n            }, rok, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Filtruj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"reset\",\n            className: \"submit-button\",\n            children: \"Wyczy\\u015B\\u0107 filtry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 9\n  }, this);\n};\n_c = FiltersForm;\nexport default FiltersForm;\nvar _c;\n$RefreshReg$(_c, \"FiltersForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FiltersForm","filters","setFilters","fetchData","sortLabel","handleFilterChange","event","name","value","target","prevFilters","handleRadioChange","before","after","oneYear","handleRadioClick","handleFilterSubmit","preventDefault","wojewodztwa","lata","Array","from","length","_","i","powierzchnie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","checked","sort","onChange","region","map","woj","surface","sfc","onClick","year","rok","_c","$RefreshReg$"],"sources":["/Users/em/Desktop/IS/projekt_koncowy/client/src/components/data/FiltersForm.js"],"sourcesContent":["// import React from 'react';\n// import '../../styles/FiltersForm.css';\n\n// const FiltersForm = ({\n//     filters,\n//     handleFilterChange,\n//     handleFilterSubmit,\n//     handleRadioChange,\n//     handleRadioClick,\n//     sortLabel\n// }) => {\n//     const wojewodztwa = [\n//         'DOLNOŚLĄSKIE', 'KUJAWSKO-POMORSKIE', 'LUBELSKIE', 'LUBUSKIE',\n//         'ŁÓDZKIE', 'MAŁOPOLSKIE', 'MAZOWIECKIE', 'OPOLSKIE',\n//         'PODKARPACKIE', 'PODLASKIE', 'POMORSKIE', 'ŚLĄSKIE',\n//         'ŚWIĘTOKRZYSKIE', 'WARMIŃSKO-MAZURSKIE', 'WIELKOPOLSKIE', 'ZACHODNIOPOMORSKIE'\n//     ];\n\n//     const lata = Array.from({ length: 2022 - 2012 + 1 }, (_, i) => 2012 + i);\n\n//     const powierzchnie = [\n//         'do 40 m2', 'od 40,1 do 60 m2', 'od 60,1 do 80 m2', 'od 80,1 m2'\n//     ];\n\n//     return (\n\n//         <div className=\"form-container my-3\">\n//             <p className=\"lead\">Filtrowanie danych</p>\n//             <form onSubmit={handleFilterSubmit} className=\"filters-form\">\n//                 <div className=\"form-group\">\n//                     <label className=\"inline-label\">\n//                         <input\n//                             type=\"checkbox\"\n//                             name=\"sortAsc\"\n//                             checked={filters.sort === '1'}\n//                             onChange={(event) => handleFilterChange({ target: { name: 'sort', value: event.target.checked ? '1' : '' } })}\n//                         />\n//                         {sortLabel}\n//                     </label>\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                     <label>\n//                         Wybierz województwo:\n//                         <select name=\"region\" value={filters.region} onChange={handleFilterChange}>\n//                             <option value=\"\">Wszystkie</option>\n//                             {wojewodztwa.map(woj => (\n//                                 <option key={woj} value={woj}>{woj}</option>\n//                             ))}\n//                         </select>\n//                     </label>\n//                 </div>\n\n//                 <div className=\"form-group\">\n//                     <label>\n//                         Wybierz powierzchnię mieszkania:\n//                         <select name=\"surface\" value={filters.surface} onChange={handleFilterChange}>\n//                             <option value=\"\">Wszystkie</option>\n//                             {powierzchnie.map(sfc => (\n//                                 <option key={sfc} value={sfc}>{sfc}</option>\n//                             ))}\n//                         </select>\n//                     </label>\n//                 </div>\n\n//                 <fieldset className=\"form-group\">\n//                     Wybierz dane według roku:\n//                     <label className=\"inline-label\">\n//                         <input\n//                             type=\"radio\"\n//                             name=\"yearFilter\"\n//                             checked={filters.before === '1'}\n//                             value=\"1\"\n//                             onChange={(event) => handleRadioChange({ target: { name: 'before', value: event.target.checked ? '1' : '0' } })}\n//                             onClick={handleRadioClick}\n//                         />\n//                         Dane do roku\n//                     </label>\n//                     <label className=\"inline-label\">\n//                         <input\n//                             type=\"radio\"\n//                             name=\"yearFilter\"\n//                             checked={filters.after === '1'}\n//                             value=\"1\"\n//                             onChange={(event) => handleRadioChange({ target: { name: 'after', value: event.target.checked ? '1' : '0' } })}\n//                             onClick={handleRadioClick}\n//                         />\n//                         Dane od roku\n//                     </label>\n//                     <label className=\"inline-label\">\n//                         <input\n//                             type=\"radio\"\n//                             name=\"yearFilter\"\n//                             checked={filters.oneYear === '1'}\n//                             value=\"1\"\n//                             onChange={(event) => handleRadioChange({ target: { name: 'oneYear', value: event.target.checked ? '1' : '0' } })}\n//                             onClick={handleRadioClick}\n//                         />\n//                         Dane z roku\n\n//                     </label>\n//                 </fieldset>\n\n//                 <div className=\"form-group\">\n//                     <label>\n//                         Wybierz rok:\n//                         <select name=\"year\" value={filters.year} onChange={handleFilterChange}>\n//                             <option value=\"\">Wszystkie</option>\n//                             {lata.map(rok => (\n//                                 <option key={rok} value={rok}>{rok}</option>\n//                             ))}\n//                         </select>\n//                     </label>\n//                 </div>\n\n//                 <div class=\"row justify-content-start\">\n//                     <div class=\"col-6\"> <button type=\"submit\" className=\"submit-button\">Filtruj</button></div>\n//                     <div class=\"col-6\"><button type=\"reset\" className=\"submit-button\">Wyczyść filtry</button></div>\n//                 </div>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default FiltersForm;\n\nimport React from 'react';\nimport '../../styles/FiltersForm.css';\n\nconst FiltersForm = ({ filters, setFilters, fetchData, sortLabel }) => {\n    const handleFilterChange = (event) => {\n        const { name, value } = event.target;\n        setFilters(prevFilters => ({ ...prevFilters, [name]: value }));\n    };\n\n    const handleRadioChange = (event) => {\n        const { name, value } = event.target;\n        setFilters(prevFilters => ({\n            ...prevFilters,\n            [name]: value,\n            before: name === 'before' ? value : '0',\n            after: name === 'after' ? value : '0',\n            oneYear: name === 'oneYear' ? value : '0'\n        }));\n    };\n\n    const handleRadioClick = (event) => {\n        const { name } = event.target;\n        setFilters(prevFilters => ({ ...prevFilters, [name]: prevFilters[name] ? '' : prevFilters[name] }));\n    };\n\n    const handleFilterSubmit = (event) => {\n        event.preventDefault();\n        fetchData();\n    };\n\n    const wojewodztwa = [\n        'DOLNOŚLĄSKIE', 'KUJAWSKO-POMORSKIE', 'LUBELSKIE', 'LUBUSKIE',\n        'ŁÓDZKIE', 'MAŁOPOLSKIE', 'MAZOWIECKIE', 'OPOLSKIE',\n        'PODKARPACKIE', 'PODLASKIE', 'POMORSKIE', 'ŚLĄSKIE',\n        'ŚWIĘTOKRZYSKIE', 'WARMIŃSKO-MAZURSKIE', 'WIELKOPOLSKIE', 'ZACHODNIOPOMORSKIE'\n    ];\n\n    const lata = Array.from({ length: 2022 - 2012 + 1 }, (_, i) => 2012 + i);\n\n    const powierzchnie = [\n        'do 40 m2', 'od 40,1 do 60 m2', 'od 60,1 do 80 m2', 'od 80,1 m2'\n    ];\n\n    return (\n        <div className=\"form-container my-3\">\n            <p className=\"lead\">Filtrowanie danych</p>\n            <form onSubmit={handleFilterSubmit} className=\"filters-form\">\n                <div className=\"form-group\">\n                    <label className=\"inline-label\">\n                        <input\n                            type=\"checkbox\"\n                            name=\"sortAsc\"\n                            checked={filters.sort === '1'}\n                            onChange={(event) => handleFilterChange({ target: { name: 'sort', value: event.target.checked ? '1' : '' } })}\n                        />\n                        {sortLabel}\n                    </label>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>\n                        Wybierz województwo:\n                        <select name=\"region\" value={filters.region} onChange={handleFilterChange}>\n                            <option value=\"\">Wszystkie</option>\n                            {wojewodztwa.map(woj => (\n                                <option key={woj} value={woj}>{woj}</option>\n                            ))}\n                        </select>\n                    </label>\n                </div>\n\n                <div className=\"form-group\">\n                    <label>\n                        Wybierz powierzchnię mieszkania:\n                        <select name=\"surface\" value={filters.surface} onChange={handleFilterChange}>\n                            <option value=\"\">Wszystkie</option>\n                            {powierzchnie.map(sfc => (\n                                <option key={sfc} value={sfc}>{sfc}</option>\n                            ))}\n                        </select>\n                    </label>\n                </div>\n\n                <fieldset className=\"form-group\">\n                    Wybierz dane według roku:\n                    <label className=\"inline-label\">\n                        <input\n                            type=\"radio\"\n                            name=\"yearFilter\"\n                            checked={filters.before === '1'}\n                            value=\"1\"\n                            onChange={(event) => handleRadioChange({ target: { name: 'before', value: event.target.checked ? '1' : '0' } })}\n                            onClick={handleRadioClick}\n                        />\n                        Dane do roku\n                    </label>\n                    <label className=\"inline-label\">\n                        <input\n                            type=\"radio\"\n                            name=\"yearFilter\"\n                            checked={filters.after === '1'}\n                            value=\"1\"\n                            onChange={(event) => handleRadioChange({ target: { name: 'after', value: event.target.checked ? '1' : '0' } })}\n                            onClick={handleRadioClick}\n                        />\n                        Dane od roku\n                    </label>\n                    <label className=\"inline-label\">\n                        <input\n                            type=\"radio\"\n                            name=\"yearFilter\"\n                            checked={filters.oneYear === '1'}\n                            value=\"1\"\n                            onChange={(event) => handleRadioChange({ target: { name: 'oneYear', value: event.target.checked ? '1' : '0' } })}\n                            onClick={handleRadioClick}\n                        />\n                        Dane z roku\n                    </label>\n                </fieldset>\n\n                <div className=\"form-group\">\n                    <label>\n                        Wybierz rok:\n                        <select name=\"year\" value={filters.year} onChange={handleFilterChange}>\n                            <option value=\"\">Wszystkie</option>\n                            {lata.map(rok => (\n                                <option key={rok} value={rok}>{rok}</option>\n                            ))}\n                        </select>\n                    </label>\n                </div>\n\n                <div className=\"row justify-content-start\">\n                    <div className=\"col-6\">\n                        <button type=\"submit\" className=\"submit-button\">Filtruj</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button type=\"reset\" className=\"submit-button\">Wyczyść filtry</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default FiltersForm;\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,OAAO;EAAEC,UAAU;EAAEC,SAAS;EAAEC;AAAU,CAAC,KAAK;EACnE,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IAClC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,UAAU,CAACQ,WAAW,KAAK;MAAE,GAAGA,WAAW;MAAE,CAACH,IAAI,GAAGC;IAAM,CAAC,CAAC,CAAC;EAClE,CAAC;EAED,MAAMG,iBAAiB,GAAIL,KAAK,IAAK;IACjC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCP,UAAU,CAACQ,WAAW,KAAK;MACvB,GAAGA,WAAW;MACd,CAACH,IAAI,GAAGC,KAAK;MACbI,MAAM,EAAEL,IAAI,KAAK,QAAQ,GAAGC,KAAK,GAAG,GAAG;MACvCK,KAAK,EAAEN,IAAI,KAAK,OAAO,GAAGC,KAAK,GAAG,GAAG;MAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}