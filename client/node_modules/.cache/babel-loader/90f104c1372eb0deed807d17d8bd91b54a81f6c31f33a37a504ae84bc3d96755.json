{"ast":null,"code":"var _jsxFileName = \"/Users/em/Desktop/IS/projekt_koncowy/client/src/components/DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { request } from '../axios_helper';\nimport FiltersForm from './FiltersForm';\nimport { exportToXML } from '../helpers/saveToXML';\nimport { exportToJSON } from '../helpers/saveToJSON';\nimport Chart from 'chart.js/auto'; // Importuj Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    year: '',\n    price: '',\n    region: '',\n    surface: '',\n    type: '',\n    before: '0',\n    after: '0',\n    sort: '',\n    sortAsc: '',\n    oneYear: '0'\n  });\n  const wojewodztwa = ['DOLNOŚLĄSKIE', 'KUJAWSKO-POMORSKIE', 'LUBELSKIE', 'LUBUSKIE', 'ŁÓDZKIE', 'MAŁOPOLSKIE', 'MAZOWIECKIE', 'OPOLSKIE', 'PODKARPACKIE', 'PODLASKIE', 'POMORSKIE', 'ŚLĄSKIE', 'ŚWIĘTOKRZYSKIE', 'WARMIŃSKO-MAZURSKIE', 'WIELKOPOLSKIE', 'ZACHODNIOPOMORSKIE'];\n  const lata = Array.from({\n    length: 2022 - 2012 + 1\n  }, (_, i) => 2012 + i);\n  const powierzchnie = ['do 40 m2', 'od 40,1 do 60 m2', 'od 60,1 do 80 m2', 'od 80,1 m2'];\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    console.log(filters);\n    const queryParams = new URLSearchParams();\n    Object.keys(filters).forEach(key => {\n      if (filters[key]) {\n        queryParams.append(key, filters[key]);\n      }\n    });\n    request('GET', `/api/prices?${queryParams}`).then(response => {\n      setData(response.data);\n      setLoading(false);\n      renderChart(response.data);\n    }).catch(error => {\n      console.log('Error:', error);\n      setError(error.message);\n      setLoading(false);\n    });\n  };\n  const handleFilterChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const handleRadioChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFilters({\n      ...filters,\n      [name]: value,\n      before: '0',\n      oneYear: '0',\n      [name]: value\n    });\n  };\n  const handleRadioClick = event => {\n    const {\n      name\n    } = event.target;\n    if (filters[name]) {\n      setFilters({\n        ...filters,\n        [name]: ''\n      });\n    }\n  };\n  const handleFilterSubmit = event => {\n    event.preventDefault();\n    setLoading(true);\n    fetchData();\n  };\n  const handleExportToXML = () => {\n    const xmlData = data.map(item => `<item>\n                <region>${item.region}</region>\n                <quarter>${item.quarter}</quarter>\n                <type>${item.type}</type>\n                <surface>${item.surface}</surface>\n                <year>${item.year}</year>\n                <price>${item.price}</price>\n            </item>\n            `).join('');\n    exportToXML(`<data>${xmlData}</data>`, 'filtered_data');\n  };\n  const handleExportToJSON = () => {\n    exportToJSON(data, 'filtered_data');\n  };\n  const renderChart = data => {\n    const regions = [...new Set(data.map(item => item.region))]; // Pobierz unikalne regiony\n    const years = [...new Set(data.map(item => item.year))]; // Pobierz unikalne lata\n\n    const datasets = regions.map(region => {\n      const pricesByRegion = years.map(year => {\n        const price = data.find(item => item.region === region && item.year === year);\n        return price ? price.price : null;\n      });\n      return {\n        label: region,\n        data: pricesByRegion,\n        borderColor: getRandomColor(),\n        // Wygeneruj losowy kolor dla każdego województwa\n        fill: false,\n        tension: 0.1\n      };\n    });\n    const ctx = document.getElementById('myChart');\n    if (!ctx) {\n      console.error('Nie znaleziono elementu canvas');\n      return;\n    }\n    const existingChart = Chart.getChart(ctx);\n    if (existingChart) {\n      existingChart.destroy();\n    }\n    new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: years,\n        datasets: datasets\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  const getRandomColor = () => {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0141adowanie danych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"B\\u0142\\u0105d: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FiltersForm, {\n      filters: filters,\n      handleFilterChange: handleFilterChange,\n      handleFilterSubmit: handleFilterSubmit,\n      handleRadioChange: handleRadioChange,\n      handleRadioClick: handleRadioClick,\n      wojewodztwa: wojewodztwa,\n      powierzchnie: powierzchnie,\n      lata: lata\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportToXML,\n      children: \"Pobierz dane XML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleExportToJSON,\n      children: \"Pobierz dane JSON\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Kwarta\\u0142\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Typ mieszkania\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Powierzchnia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u015Arednia cena\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quarter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.surface\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this)]\n          }, `${item.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(DataTable, \"LwCIbhhOa2Yw+RbebObcnxMb6/0=\");\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","request","FiltersForm","exportToXML","exportToJSON","Chart","jsxDEV","_jsxDEV","DataTable","_s","data","setData","loading","setLoading","error","setError","filters","setFilters","year","price","region","surface","type","before","after","sort","sortAsc","oneYear","wojewodztwa","lata","Array","from","length","_","i","powierzchnie","fetchData","console","log","queryParams","URLSearchParams","Object","keys","forEach","key","append","then","response","renderChart","catch","message","handleFilterChange","event","name","value","target","handleRadioChange","handleRadioClick","handleFilterSubmit","preventDefault","handleExportToXML","xmlData","map","item","quarter","join","handleExportToJSON","regions","Set","years","datasets","pricesByRegion","find","label","borderColor","getRandomColor","fill","tension","ctx","document","getElementById","existingChart","getChart","destroy","labels","options","scales","y","beginAtZero","letters","color","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","id","_c","$RefreshReg$"],"sources":["/Users/em/Desktop/IS/projekt_koncowy/client/src/components/DataTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { request } from '../axios_helper';\nimport FiltersForm from './FiltersForm';\nimport { exportToXML } from '../helpers/saveToXML';\nimport { exportToJSON } from '../helpers/saveToJSON';\nimport Chart from 'chart.js/auto'; // Importuj Chart.js\n\nconst DataTable = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [filters, setFilters] = useState({\n        year: '',\n        price: '',\n        region: '',\n        surface: '',\n        type: '',\n        before: '0',\n        after: '0',\n        sort: '',\n        sortAsc: '',\n        oneYear: '0'\n    });\n    const wojewodztwa = [\n        'DOLNOŚLĄSKIE', 'KUJAWSKO-POMORSKIE', 'LUBELSKIE', 'LUBUSKIE',\n        'ŁÓDZKIE', 'MAŁOPOLSKIE', 'MAZOWIECKIE', 'OPOLSKIE',\n        'PODKARPACKIE', 'PODLASKIE', 'POMORSKIE', 'ŚLĄSKIE',\n        'ŚWIĘTOKRZYSKIE', 'WARMIŃSKO-MAZURSKIE', 'WIELKOPOLSKIE', 'ZACHODNIOPOMORSKIE'\n    ];\n\n    const lata = Array.from({ length: 2022 - 2012 + 1 }, (_, i) => 2012 + i);\n\n    const powierzchnie = [\n        'do 40 m2', 'od 40,1 do 60 m2', 'od 60,1 do 80 m2', 'od 80,1 m2'\n    ];\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        console.log(filters);\n        const queryParams = new URLSearchParams();\n        Object.keys(filters).forEach(key => {\n            if (filters[key]) {\n                queryParams.append(key, filters[key]);\n            }\n        });\n        request('GET', `/api/prices?${queryParams}`)\n            .then(response => {\n                setData(response.data);\n                setLoading(false);\n                renderChart(response.data);\n            })\n            .catch(error => {\n                console.log('Error:', error);\n                setError(error.message);\n                setLoading(false);\n            });\n    };\n\n    const handleFilterChange = (event) => {\n        const { name, value } = event.target;\n        setFilters({ ...filters, [name]: value });\n    };\n\n    const handleRadioChange = (event) => {\n        const { name, value } = event.target;\n        setFilters({ ...filters, [name]: value, before: '0', oneYear: '0', [name]: value });\n    };\n\n    const handleRadioClick = (event) => {\n        const { name } = event.target;\n        if (filters[name]) {\n            setFilters({ ...filters, [name]: '' });\n        }\n    };\n    const handleFilterSubmit = (event) => {\n        event.preventDefault();\n        setLoading(true);\n        fetchData();\n    };\n\n    const handleExportToXML = () => {\n        const xmlData = data.map(item => (\n            `<item>\n                <region>${item.region}</region>\n                <quarter>${item.quarter}</quarter>\n                <type>${item.type}</type>\n                <surface>${item.surface}</surface>\n                <year>${item.year}</year>\n                <price>${item.price}</price>\n            </item>\n            `\n        )).join('');\n\n        exportToXML(`<data>${xmlData}</data>`, 'filtered_data');\n    };\n\n\n    const handleExportToJSON = () => {\n        exportToJSON(data, 'filtered_data');\n    };\n\n    const renderChart = (data) => {\n        const regions = [...new Set(data.map(item => item.region))]; // Pobierz unikalne regiony\n        const years = [...new Set(data.map(item => item.year))]; // Pobierz unikalne lata\n\n        const datasets = regions.map(region => {\n            const pricesByRegion = years.map(year => {\n                const price = data.find(item => item.region === region && item.year === year);\n                return price ? price.price : null;\n            });\n\n            return {\n                label: region,\n                data: pricesByRegion,\n                borderColor: getRandomColor(), // Wygeneruj losowy kolor dla każdego województwa\n                fill: false,\n                tension: 0.1\n            };\n        });\n\n        const ctx = document.getElementById('myChart');\n\n        if (!ctx) {\n            console.error('Nie znaleziono elementu canvas');\n            return;\n        }\n\n        const existingChart = Chart.getChart(ctx);\n\n        if (existingChart) {\n            existingChart.destroy();\n        }\n        new Chart(ctx, {\n            type: 'line',\n            data: {\n                labels: years,\n                datasets: datasets\n            },\n            options: {\n                scales: {\n                    y: {\n                        beginAtZero: true\n                    }\n                }\n            }\n        });\n    };\n\n    const getRandomColor = () => {\n        const letters = '0123456789ABCDEF';\n        let color = '#';\n        for (let i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    };\n\n    if (loading) {\n        return <div>Ładowanie danych...</div>;\n    }\n\n    if (error) {\n        return <div>Błąd: {error}</div>;\n    }\n\n    return (\n        <div>\n\n            <FiltersForm\n                filters={filters}\n                handleFilterChange={handleFilterChange}\n                handleFilterSubmit={handleFilterSubmit}\n                handleRadioChange={handleRadioChange}\n                handleRadioClick={handleRadioClick}\n                wojewodztwa={wojewodztwa}\n                powierzchnie={powierzchnie}\n                lata={lata}\n            />\n            <button onClick={handleExportToXML}>Pobierz dane XML</button>\n            <button onClick={handleExportToJSON}>Pobierz dane JSON</button>\n\n            <div className=\"container\">\n                <canvas id=\"myChart\"></canvas> {/* Dodaj element canvas dla wykresu */}\n            </div>\n            <div className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Region</th>\n                            <th>Kwartał</th>\n                            <th>Typ mieszkania</th>\n                            <th>Powierzchnia</th>\n                            <th>Rok</th>\n                            <th>Średnia cena</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map(item => (\n                            <tr key={`${item.id}`}>\n                                <td>{item.region}</td>\n                                <td>{item.quarter}</td>\n                                <td>{item.type}</td>\n                                <td>{item.surface}</td>\n                                <td>{item.year}</td>\n                                <td>{item.price}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}