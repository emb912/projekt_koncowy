{"ast":null,"code":"var _jsxFileName = \"/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = ({\n  data\n}) => {\n  _s();\n  useEffect(() => {\n    if (data.length > 0) {\n      const chartData = {};\n      const colors = generateRandomColors(regions.length);\n      data.forEach(item => {\n        const key = `${item.region}-${item.type}-${item.surface}`;\n        if (!chartData[key]) {\n          chartData[key] = [];\n        }\n        chartData[key].push({\n          x: `${item.year} Q${item.quarter}`,\n          y: item.price\n        });\n      });\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n      const datasets = Object.keys(chartData).map(key => {\n        const color = key.includes('pierwotny') ? 'rgba(255, 99, 132, 0.5)' : 'rgba(54, 162, 235, 0.5)';\n        return {\n          label: key,\n          data: chartData[key],\n          backgroundColor: color,\n          borderColor: color.replace('0.5', '1'),\n          borderWidth: 1,\n          pointRadius: 5,\n          pointHoverRadius: 8,\n          showLine: true\n        };\n      });\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          datasets: datasets\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Rok i kwartał'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Średnia cena'\n              },\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }, [data]);\n  const generateRandomColors = numColors => {\n    const colors = [];\n    for (let i = 0; i < numColors; i++) {\n      const color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n      colors.push(color);\n    }\n    return colors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(ChartComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","Chart","jsxDEV","_jsxDEV","ChartComponent","data","_s","length","chartData","colors","generateRandomColors","regions","forEach","item","key","region","type","surface","push","x","year","quarter","y","price","ctx","document","getElementById","getContext","existingChart","getChart","destroy","datasets","Object","keys","map","color","includes","label","backgroundColor","borderColor","replace","borderWidth","pointRadius","pointHoverRadius","showLine","options","scales","title","display","text","beginAtZero","numColors","i","Math","floor","random","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChartComponent = ({ data }) => {\n    useEffect(() => {\n        if (data.length > 0) {\n            const chartData = {};\n            const colors = generateRandomColors(regions.length);\n\n            data.forEach(item => {\n                const key = `${item.region}-${item.type}-${item.surface}`;\n                if (!chartData[key]) {\n                    chartData[key] = [];\n                }\n                chartData[key].push({ x: `${item.year} Q${item.quarter}`, y: item.price });\n            });\n\n            const ctx = document.getElementById('myChart').getContext('2d');\n            const existingChart = Chart.getChart(ctx);\n            if (existingChart) {\n                existingChart.destroy();\n            }\n\n            const datasets = Object.keys(chartData).map(key => {\n                const color = key.includes('pierwotny') ? 'rgba(255, 99, 132, 0.5)' : 'rgba(54, 162, 235, 0.5)';\n                return {\n                    label: key,\n                    data: chartData[key],\n                    backgroundColor: color,\n                    borderColor: color.replace('0.5', '1'),\n                    borderWidth: 1,\n                    pointRadius: 5,\n                    pointHoverRadius: 8,\n                    showLine: true\n                };\n            });\n\n            new Chart(ctx, {\n                type: 'line',\n                data: {\n                    datasets: datasets\n                },\n                options: {\n                    scales: {\n                        x: {\n                            title: {\n                                display: true,\n                                text: 'Rok i kwartał'\n                            }\n                        },\n                        y: {\n                            title: {\n                                display: true,\n                                text: 'Średnia cena'\n                            },\n                            beginAtZero: true\n                        }\n                    }\n                }\n            });\n        }\n    }, [data]);\n\n    const generateRandomColors = (numColors) => {\n        const colors = [];\n        for (let i = 0; i < numColors; i++) {\n            const color = `rgba(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, 0.5)`;\n            colors.push(color);\n        }\n        return colors;\n    };\n\n    return (\n        <div>\n            <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n        </div>\n    );\n};\n\nexport default ChartComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}