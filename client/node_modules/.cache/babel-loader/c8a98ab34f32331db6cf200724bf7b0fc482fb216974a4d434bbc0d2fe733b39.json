{"ast":null,"code":"var _jsxFileName = \"/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = ({\n  data\n}) => {\n  _s();\n  useEffect(() => {\n    if (data.length > 0) {\n      const years = data.map(item => item.year);\n      const prices = data.map(item => item.price);\n      const ctx = document.getElementById('myChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'scatter',\n        data: {\n          datasets: [{\n            label: 'Średnia cena',\n            data: data.map(item => ({\n              x: item.year,\n              y: item.price,\n              region: item.region,\n              surface: item.surface\n            })),\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgb(75, 192, 192)',\n            pointRadius: 5,\n            pointHoverRadius: 8,\n            showLine: false\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Rok'\n              },\n              type: 'linear',\n              position: 'bottom'\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Średnia cena'\n              }\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  const dataPoint = context.parsed;\n                  return `Region: ${dataPoint.region}, Powierzchnia: ${dataPoint.surface}, Rok: ${dataPoint.x}, Cena: ${dataPoint.y}`;\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(ChartComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","ChartComponent","data","_s","length","years","map","item","year","prices","price","ctx","document","getElementById","getContext","type","datasets","label","x","y","region","surface","backgroundColor","borderColor","pointRadius","pointHoverRadius","showLine","options","scales","title","display","text","position","plugins","tooltip","callbacks","context","dataPoint","parsed","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChartComponent = ({ data }) => {\n    useEffect(() => {\n        if (data.length > 0) {\n            const years = data.map(item => item.year);\n            const prices = data.map(item => item.price);\n\n            const ctx = document.getElementById('myChart').getContext('2d');\n            new Chart(ctx, {\n                type: 'scatter',\n                data: {\n                    datasets: [{\n                        label: 'Średnia cena',\n                        data: data.map(item => ({ x: item.year, y: item.price, region: item.region, surface: item.surface })),\n                        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n                        borderColor: 'rgb(75, 192, 192)',\n                        pointRadius: 5,\n                        pointHoverRadius: 8,\n                        showLine: false\n                    }]\n                },\n                options: {\n                    scales: {\n                        x: {\n                            title: {\n                                display: true,\n                                text: 'Rok'\n                            },\n                            type: 'linear',\n                            position: 'bottom'\n                        },\n                        y: {\n                            title: {\n                                display: true,\n                                text: 'Średnia cena'\n                            }\n                        }\n                    },\n                    plugins: {\n                        tooltip: {\n                            callbacks: {\n                                label: function (context) {\n                                    const dataPoint = context.parsed;\n                                    return `Region: ${dataPoint.region}, Powierzchnia: ${dataPoint.surface}, Rok: ${dataPoint.x}, Cena: ${dataPoint.y}`;\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }, [data]);\n\n    return (\n        <div>\n            <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n        </div>\n    );\n};\n\nexport default ChartComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjCP,SAAS,CAAC,MAAM;IACZ,IAAIM,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;MACjB,MAAMC,KAAK,GAAGH,IAAI,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;MACzC,MAAMC,MAAM,GAAGP,IAAI,CAACI,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACG,KAAK,CAAC;MAE3C,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MAC/D,IAAIhB,KAAK,CAACa,GAAG,EAAE;QACXI,IAAI,EAAE,SAAS;QACfb,IAAI,EAAE;UACFc,QAAQ,EAAE,CAAC;YACPC,KAAK,EAAE,cAAc;YACrBf,IAAI,EAAEA,IAAI,CAACI,GAAG,CAACC,IAAI,KAAK;cAAEW,CAAC,EAAEX,IAAI,CAACC,IAAI;cAAEW,CAAC,EAAEZ,IAAI,CAACG,KAAK;cAAEU,MAAM,EAAEb,IAAI,CAACa,MAAM;cAAEC,OAAO,EAAEd,IAAI,CAACc;YAAQ,CAAC,CAAC,CAAC;YACrGC,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE,mBAAmB;YAChCC,WAAW,EAAE,CAAC;YACdC,gBAAgB,EAAE,CAAC;YACnBC,QAAQ,EAAE;UACd,CAAC;QACL,CAAC;QACDC,OAAO,EAAE;UACLC,MAAM,EAAE;YACJV,CAAC,EAAE;cACCW,KAAK,EAAE;gBACHC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACV,CAAC;cACDhB,IAAI,EAAE,QAAQ;cACdiB,QAAQ,EAAE;YACd,CAAC;YACDb,CAAC,EAAE;cACCU,KAAK,EAAE;gBACHC,OAAO,EAAE,IAAI;gBACbC,IAAI,EAAE;cACV;YACJ;UACJ,CAAC;UACDE,OAAO,EAAE;YACLC,OAAO,EAAE;cACLC,SAAS,EAAE;gBACPlB,KAAK,EAAE,SAAAA,CAAUmB,OAAO,EAAE;kBACtB,MAAMC,SAAS,GAAGD,OAAO,CAACE,MAAM;kBAChC,OAAQ,WAAUD,SAAS,CAACjB,MAAO,mBAAkBiB,SAAS,CAAChB,OAAQ,UAASgB,SAAS,CAACnB,CAAE,WAAUmB,SAAS,CAAClB,CAAE,EAAC;gBACvH;cACJ;YACJ;UACJ;QACJ;MACJ,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACjB,IAAI,CAAC,CAAC;EAEV,oBACIF,OAAA;IAAAuC,QAAA,eACIvC,OAAA;MAAQwC,EAAE,EAAC,SAAS;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAAC3C,EAAA,CAzDIF,cAAc;AAAA8C,EAAA,GAAd9C,cAAc;AA2DpB,eAAeA,cAAc;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}