{"ast":null,"code":"var _jsxFileName = \"/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = ({\n  data\n}) => {\n  _s();\n  useEffect(() => {\n    if (data.length > 0) {\n      // Tworzenie unikalnej listy lat i kwartałów\n      const years = [...new Set(data.map(item => item.year))];\n      const quarters = [1, 2, 3, 4];\n\n      // Tworzenie punktów danych na wykresie\n      const chartData = years.reduce((acc, year) => {\n        quarters.forEach(quarter => {\n          const quarterData = data.find(item => item.year === year && item.quarter === quarter);\n          if (quarterData) {\n            acc.push({\n              x: `${year} Q${quarter}`,\n              y: quarterData.price,\n              region: quarterData.region,\n              surface: quarterData.surface\n            });\n          } else {\n            // Jeśli brak danych dla danego kwartału, ustaw cenę na null\n            acc.push({\n              x: `${year} Q${quarter}`,\n              y: null\n            });\n          }\n        });\n        return acc;\n      }, []);\n      console.log(\"ChartData:\", chartData);\n      const ctx = document.getElementById('myChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          datasets: [{\n            label: 'Średnia cena',\n            data: chartData,\n            backgroundColor: 'rgba(75, 192, 192, 0.5)',\n            borderColor: 'rgb(75, 192, 192)',\n            pointRadius: 5,\n            pointHoverRadius: 8,\n            showLine: true\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Rok i kwartał'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Średnia cena'\n              },\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  const dataPoint = context.parsed;\n                  if (dataPoint.y !== null) {\n                    return `Region: ${dataPoint.region}, Powierzchnia: ${dataPoint.surface}, Cena: ${dataPoint.y}`;\n                  } else {\n                    return `Brak danych`;\n                  }\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(ChartComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","ChartComponent","data","_s","length","years","Set","map","item","year","quarters","chartData","reduce","acc","forEach","quarter","quarterData","find","push","x","y","price","region","surface","console","log","ctx","document","getElementById","getContext","type","datasets","label","backgroundColor","borderColor","pointRadius","pointHoverRadius","showLine","options","scales","title","display","text","beginAtZero","plugins","tooltip","callbacks","context","dataPoint","parsed","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChartComponent = ({ data }) => {\n    useEffect(() => {\n        if (data.length > 0) {\n            // Tworzenie unikalnej listy lat i kwartałów\n            const years = [...new Set(data.map(item => item.year))];\n            const quarters = [1, 2, 3, 4];\n\n            // Tworzenie punktów danych na wykresie\n            const chartData = years.reduce((acc, year) => {\n                quarters.forEach(quarter => {\n                    const quarterData = data.find(item => item.year === year && item.quarter === quarter);\n                    if (quarterData) {\n                        acc.push({\n                            x: `${year} Q${quarter}`,\n                            y: quarterData.price,\n                            region: quarterData.region,\n                            surface: quarterData.surface\n                        });\n                    } else {\n                        // Jeśli brak danych dla danego kwartału, ustaw cenę na null\n                        acc.push({ x: `${year} Q${quarter}`, y: null });\n                    }\n                });\n                return acc;\n            }, []);\n            console.log(\"ChartData:\", chartData);\n\n            const ctx = document.getElementById('myChart').getContext('2d');\n            new Chart(ctx, {\n                type: 'line',\n                data: {\n                    datasets: [{\n                        label: 'Średnia cena',\n                        data: chartData,\n                        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n                        borderColor: 'rgb(75, 192, 192)',\n                        pointRadius: 5,\n                        pointHoverRadius: 8,\n                        showLine: true\n                    }]\n                },\n                options: {\n                    scales: {\n                        x: {\n                            title: {\n                                display: true,\n                                text: 'Rok i kwartał'\n                            }\n                        },\n                        y: {\n                            title: {\n                                display: true,\n                                text: 'Średnia cena'\n                            },\n                            beginAtZero: true\n                        }\n                    },\n                    plugins: {\n                        tooltip: {\n                            callbacks: {\n                                label: function (context) {\n                                    const dataPoint = context.parsed;\n                                    if (dataPoint.y !== null) {\n                                        return `Region: ${dataPoint.region}, Powierzchnia: ${dataPoint.surface}, Cena: ${dataPoint.y}`;\n                                    } else {\n                                        return `Brak danych`;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }, [data]);\n\n    return (\n        <div>\n            <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n        </div>\n    );\n};\n\nexport default ChartComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}