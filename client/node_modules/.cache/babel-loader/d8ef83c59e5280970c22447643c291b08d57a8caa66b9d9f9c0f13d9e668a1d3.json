{"ast":null,"code":"var _jsxFileName = \"/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartComponent = ({\n  data\n}) => {\n  _s();\n  useEffect(() => {\n    if (data.length > 0) {\n      // Filtracja danych dla mieszkań z rynku pierwotnego i wtórnego\n      const primaryMarketData = data.filter(item => item.type === 'rynek pierwotny');\n      const secondaryMarketData = data.filter(item => item.type === 'rynek wtórny');\n\n      // Tworzenie unikalnej listy województw\n      const regions = [...new Set(data.map(item => item.region))];\n      console.log(regions);\n      // Tworzenie punktów danych dla mieszkań z rynku pierwotnego\n      const primaryMarketChartData = regions.reduce((acc, region) => {\n        const regionData = primaryMarketData.filter(item => item.region === region);\n        acc[region] = regionData.map(item => ({\n          x: `${item.year} Q${item.quarter}`,\n          y: item.price,\n          surface: item.surface\n        }));\n        return acc;\n      }, {});\n\n      // Tworzenie punktów danych dla mieszkań z rynku wtórnego\n      const secondaryMarketChartData = regions.reduce((acc, region) => {\n        const regionData = secondaryMarketData.filter(item => item.region === region);\n        acc[region] = regionData.map(item => ({\n          x: `${item.year} Q${item.quarter}`,\n          y: item.price,\n          surface: item.surface\n        }));\n        return acc;\n      }, {});\n      const ctx = document.getElementById('myChart').getContext('2d');\n      const existingChart = Chart.getChart(ctx);\n      if (existingChart) {\n        existingChart.destroy();\n      }\n      // Tworzenie osobnych serii danych dla mieszkań z rynku pierwotnego i wtórnego\n      const datasets = Object.keys(regions).map(region => {\n        console.log(region);\n        return {\n          label: `${region} - Pierwotny`,\n          data: primaryMarketChartData[region],\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\n          // Kolor dla mieszkań z rynku pierwotnego\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 1,\n          pointRadius: 5,\n          pointHoverRadius: 8,\n          showLine: true\n        };\n      });\n      // .concat(Object.keys(regions).map(region => {\n      //     return {\n      //         label: `${region} - Wtórny`,\n      //         data: secondaryMarketChartData[region],\n      //         backgroundColor: 'rgba(54, 162, 235, 0.5)', // Kolor dla mieszkań z rynku wtórnego\n      //         borderColor: 'rgba(54, 162, 235, 1)',\n      //         borderWidth: 1,\n      //         pointRadius: 5,\n      //         pointHoverRadius: 8,\n      //         showLine: true\n      //     };\n      // }));\n      console.log(datasets);\n      new Chart(ctx, {\n        type: 'line',\n        data: {\n          datasets: datasets\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Rok i kwartał'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Średnia cena'\n              },\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function (context) {\n                  const dataPoint = context.parsed;\n                  return `Powierzchnia: ${dataPoint.surface}, Cena: ${dataPoint.y}`;\n                }\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"400\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(ChartComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ChartComponent;\nexport default ChartComponent;\nvar _c;\n$RefreshReg$(_c, \"ChartComponent\");","map":{"version":3,"names":["React","useEffect","useState","Chart","jsxDEV","_jsxDEV","ChartComponent","data","_s","length","primaryMarketData","filter","item","type","secondaryMarketData","regions","Set","map","region","console","log","primaryMarketChartData","reduce","acc","regionData","x","year","quarter","y","price","surface","secondaryMarketChartData","ctx","document","getElementById","getContext","existingChart","getChart","destroy","datasets","Object","keys","label","backgroundColor","borderColor","borderWidth","pointRadius","pointHoverRadius","showLine","options","scales","title","display","text","beginAtZero","plugins","tooltip","callbacks","context","dataPoint","parsed","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/em/Desktop/IS/projekt_koncowy/client/src/components/ChartComponent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Chart from 'chart.js/auto';\n\nconst ChartComponent = ({ data }) => {\n    useEffect(() => {\n        if (data.length > 0) {\n            // Filtracja danych dla mieszkań z rynku pierwotnego i wtórnego\n            const primaryMarketData = data.filter(item => item.type === 'rynek pierwotny');\n            const secondaryMarketData = data.filter(item => item.type === 'rynek wtórny');\n\n            // Tworzenie unikalnej listy województw\n            const regions = [...new Set(data.map(item => item.region))];\n            console.log(regions);\n            // Tworzenie punktów danych dla mieszkań z rynku pierwotnego\n            const primaryMarketChartData = regions.reduce((acc, region) => {\n                const regionData = primaryMarketData.filter(item => item.region === region);\n                acc[region] = regionData.map(item => ({ x: `${item.year} Q${item.quarter}`, y: item.price, surface: item.surface }));\n                return acc;\n            }, {});\n\n            // Tworzenie punktów danych dla mieszkań z rynku wtórnego\n            const secondaryMarketChartData = regions.reduce((acc, region) => {\n                const regionData = secondaryMarketData.filter(item => item.region === region);\n                acc[region] = regionData.map(item => ({ x: `${item.year} Q${item.quarter}`, y: item.price, surface: item.surface }));\n                return acc;\n            }, {});\n\n            const ctx = document.getElementById('myChart').getContext('2d');\n            const existingChart = Chart.getChart(ctx);\n            if (existingChart) {\n                existingChart.destroy();\n            }\n            // Tworzenie osobnych serii danych dla mieszkań z rynku pierwotnego i wtórnego\n            const datasets = Object.keys(regions).map(region => {\n                console.log(region);\n                return {\n                    label: `${region} - Pierwotny`,\n                    data: primaryMarketChartData[region],\n                    backgroundColor: 'rgba(255, 99, 132, 0.5)', // Kolor dla mieszkań z rynku pierwotnego\n                    borderColor: 'rgba(255, 99, 132, 1)',\n                    borderWidth: 1,\n                    pointRadius: 5,\n                    pointHoverRadius: 8,\n                    showLine: true\n                };\n            });\n            // .concat(Object.keys(regions).map(region => {\n            //     return {\n            //         label: `${region} - Wtórny`,\n            //         data: secondaryMarketChartData[region],\n            //         backgroundColor: 'rgba(54, 162, 235, 0.5)', // Kolor dla mieszkań z rynku wtórnego\n            //         borderColor: 'rgba(54, 162, 235, 1)',\n            //         borderWidth: 1,\n            //         pointRadius: 5,\n            //         pointHoverRadius: 8,\n            //         showLine: true\n            //     };\n            // }));\n            console.log(datasets);\n            new Chart(ctx, {\n                type: 'line',\n                data: {\n                    datasets: datasets\n                },\n                options: {\n                    scales: {\n                        x: {\n                            title: {\n                                display: true,\n                                text: 'Rok i kwartał'\n                            }\n                        },\n                        y: {\n                            title: {\n                                display: true,\n                                text: 'Średnia cena'\n                            },\n                            beginAtZero: true\n                        }\n                    },\n                    plugins: {\n                        tooltip: {\n                            callbacks: {\n                                label: function (context) {\n                                    const dataPoint = context.parsed;\n                                    return `Powierzchnia: ${dataPoint.surface}, Cena: ${dataPoint.y}`;\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }, [data]);\n\n    return (\n        <div>\n            <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n        </div>\n    );\n};\n\nexport default ChartComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}