{"ast":null,"code":"var _jsxFileName = \"/Users/em/Desktop/IS/projekt_koncowy/client/src/components/data/prices/PricesData.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect, useRef } from 'react';\n// import { request } from '../../../axios_helper';\n// import FiltersForm from '../FiltersForm';\n// import { exportToXML } from '../../../helpers/saveToXML';\n// import { exportToJSON } from '../../../helpers/saveToJSON';\n// import PricesChart from './PricesChart';\n\n// const PricesData = () => {\n//     const [data, setData] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [filters, setFilters] = useState({\n//         year: '',\n//         region: '',\n//         surface: '',\n//         before: '',\n//         after: '',\n//         sort: '',\n//         sortAsc: '',\n//         oneYear: ''\n//     });\n\n//     const [filtersSubmitted, setFiltersSubmitted] = useState(false);\n//     const [showChart, setShowChart] = useState(false);\n//     const chartRef = useRef(null);\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n\n//     const fetchData = () => {\n//         const queryParams = new URLSearchParams();\n//         Object.keys(filters).forEach(key => {\n//             if (filters[key]) {\n//                 queryParams.append(key, filters[key]);\n//             }\n//         });\n//         request('GET', `/api/prices?${queryParams}`)\n//             .then(response => {\n//                 setData(response.data);\n//                 setLoading(false);\n\n//             })\n//             .catch(error => {\n//                 console.log('Error:', error);\n//                 setError(error.message);\n//                 setLoading(false);\n//             });\n//     };\n\n//     const handleFilterChange = (event) => {\n//         const { name, value } = event.target;\n//         setFilters({ ...filters, [name]: value });\n//     };\n\n//     const handleRadioChange = (event) => {\n//         const { name, value } = event.target;\n//         setFilters({ ...filters, [name]: value, before: '0', after: '0', oneYear: '0', [name]: value });\n//     };\n\n//     const handleRadioClick = (event) => {\n//         const { name } = event.target;\n//         if (filters[name]) {\n//             setFilters({ ...filters, [name]: '' });\n//         }\n//     };\n//     const handleFilterSubmit = (event) => {\n//         event.preventDefault();\n//         setLoading(true);\n//         fetchData();\n//         setFiltersSubmitted(true);\n//     };\n\n//     const handleExportToXML = () => {\n//         const xmlData = data.map(item => (\n//             `<item>\n//                 <region>${item.region}</region>\n//                 <quarter>${item.quarter}</quarter>\n//                 <type>${item.type}</type>\n//                 <surface>${item.surface}</surface>\n//                 <year>${item.year}</year>\n//                 <price>${item.price}</price>\n//             </item>\n//             `\n//         )).join('');\n\n//         exportToXML(`<data>${xmlData}</data>`, 'filtered_data');\n//     };\n\n//     const handleExportToJSON = () => {\n//         exportToJSON(data, 'filtered_data');\n//     };\n\n//     const handleDownloadChart = () => {\n//         if (chartRef.current) {\n//             chartRef.current.downloadChart();\n//         }\n//     };\n\n//     if (loading) {\n//         return <div>Ładowanie danych...</div>;\n//     }\n\n//     if (error) {\n//         return <div>Błąd: {error}</div>;\n//     }\n\n//     const anyFiltersActive = Object.values(filters).some(value => value !== '');\n\n//     return (\n//         <div>\n//             <p></p>\n//             <FiltersForm\n//                 filters={filters}\n//                 setFilters={setFilters}\n//                 fetchData={fetchData}\n//                 handleFilterChange={handleFilterChange}\n//                 handleFilterSubmit={handleFilterSubmit}\n//                 handleRadioChange={handleRadioChange}\n//                 handleRadioClick={handleRadioClick}\n//                 sortLabel=\"Sortowanie po cenie rosnąco\"\n//             />\n//             <p></p>\n//             <div className=\"form-container\">\n//                 <p className=\"lead\">Eksport danych</p>\n//                 <div class=\"row justify-content-start\">\n//                     <div class=\"col-6\"> <button className=\"submit-button full-width\" onClick={handleExportToXML}>Pobierz dane w formacje XML</button></div>\n//                     <div class=\"col-6\"><button className=\"submit-button full-width\" onClick={handleExportToJSON}>Pobierz dane w formacie JSON</button></div>\n//                 </div>\n//                 <p></p>\n//                 {filtersSubmitted && (\n//                     <div class=\"row justify-content-start\">\n\n//                         <div class=\"col-6\"><button className=\"submit-button violet-btn full-width\" onClick={() => setShowChart(!showChart)}>\n//                             {showChart ? 'Ukryj wykres' : 'Pokaż wykres'}\n//                         </button></div>\n//                         {showChart && (\n//                             <div class=\"col-6\">\n//                                 <button className=\"submit-button violet-btn full-width\" onClick={handleDownloadChart}>\n//                                     Pobierz wykres\n//                                 </button>\n//                             </div>\n//                         )}\n//                     </div>\n//                 )}\n//             </div>\n\n//             <div className=\"container\">\n//                 {showChart && <PricesChart data={data} ref={chartRef} />}\n//                 <p></p>\n\n//                 <table className=\"table\">\n//                     <thead>\n//                         <tr>\n//                             <th>Region</th>\n//                             <th>Rok</th>\n//                             <th>Kwartał</th>\n//                             <th>Typ mieszkania</th>\n//                             <th>Powierzchnia</th>\n\n//                             <th>Średnia cena (zł)</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {data.map(item => (\n//                             <tr key={`${item.id}`}>\n//                                 <td>{item.region}</td>\n//                                 <td>{item.year}</td>\n//                                 <td>{item.quarter}</td>\n//                                 <td>{item.type}</td>\n//                                 <td>{item.surface}</td>\n\n//                                 <td>{item.price}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div >\n//     );\n\n// };\n\n// export default PricesData;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { request } from '../../../axios_helper';\nimport FiltersForm from '../FiltersForm';\nimport { exportToXML } from '../../../helpers/saveToXML';\nimport { exportToJSON } from '../../../helpers/saveToJSON';\nimport PricesChart from './PricesChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PricesData = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [filters, setFilters] = useState({\n    year: '',\n    region: '',\n    surface: '',\n    before: '',\n    after: '',\n    sort: '',\n    sortAsc: '',\n    oneYear: ''\n  });\n  const [filtersSubmitted, setFiltersSubmitted] = useState(false);\n  const [showChart, setShowChart] = useState(false);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = () => {\n    const queryParams = new URLSearchParams();\n    Object.keys(filters).forEach(key => {\n      if (filters[key]) {\n        queryParams.append(key, filters[key]);\n      }\n    });\n    request('GET', `/api/prices?${queryParams}`).then(response => {\n      setData(response.data);\n      setLoading(false);\n    }).catch(error => {\n      console.log('Error:', error);\n      setError(error.message);\n      setLoading(false);\n    });\n  };\n  const handleExportToXML = () => {\n    const xmlData = data.map(item => `<item>\n                <region>${item.region}</region>\n                <quarter>${item.quarter}</quarter>\n                <type>${item.type}</type>\n                <surface>${item.surface}</surface>\n                <year>${item.year}</year>\n                <price>${item.price}</price>\n            </item>`).join('');\n    exportToXML(`<data>${xmlData}</data>`, 'filtered_data');\n  };\n  const handleExportToJSON = () => {\n    exportToJSON(data, 'filtered_data');\n  };\n  const handleDownloadChart = () => {\n    if (chartRef.current) {\n      chartRef.current.downloadChart();\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0141adowanie danych...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"B\\u0142\\u0105d: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 16\n    }, this);\n  }\n  const anyFiltersActive = Object.values(filters).some(value => value !== '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FiltersForm, {\n      filters: filters,\n      setFilters: setFilters,\n      fetchData: fetchData,\n      sortLabel: \"Sortowanie po cenie rosn\\u0105co\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Eksport danych\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button full-width\",\n            onClick: handleExportToXML,\n            children: \"Pobierz dane w formacje XML\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button full-width\",\n            onClick: handleExportToJSON,\n            children: \"Pobierz dane w formacie JSON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), filtersSubmitted && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button violet-btn full-width\",\n            onClick: () => setShowChart(!showChart),\n            children: showChart ? 'Ukryj wykres' : 'Pokaż wykres'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this), showChart && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submit-button violet-btn full-width\",\n            onClick: handleDownloadChart,\n            children: \"Pobierz wykres\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [showChart && /*#__PURE__*/_jsxDEV(PricesChart, {\n        data: data,\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rok\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Kwarta\\u0142\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Typ mieszkania\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Powierzchnia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u015Arednia cena (z\\u0142)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quarter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.surface\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 9\n  }, this);\n};\n_s(PricesData, \"tNgdQPUW93aRj57ZbNS2MNqNGw4=\");\n_c = PricesData;\nexport default PricesData;\nvar _c;\n$RefreshReg$(_c, \"PricesData\");","map":{"version":3,"names":["React","useState","useEffect","useRef","request","FiltersForm","exportToXML","exportToJSON","PricesChart","jsxDEV","_jsxDEV","PricesData","_s","data","setData","loading","setLoading","error","setError","filters","setFilters","year","region","surface","before","after","sort","sortAsc","oneYear","filtersSubmitted","setFiltersSubmitted","showChart","setShowChart","chartRef","fetchData","queryParams","URLSearchParams","Object","keys","forEach","key","append","then","response","catch","console","log","message","handleExportToXML","xmlData","map","item","quarter","type","price","join","handleExportToJSON","handleDownloadChart","current","downloadChart","children","fileName","_jsxFileName","lineNumber","columnNumber","anyFiltersActive","values","some","value","sortLabel","className","onClick","ref","id","_c","$RefreshReg$"],"sources":["/Users/em/Desktop/IS/projekt_koncowy/client/src/components/data/prices/PricesData.js"],"sourcesContent":["// import React, { useState, useEffect, useRef } from 'react';\n// import { request } from '../../../axios_helper';\n// import FiltersForm from '../FiltersForm';\n// import { exportToXML } from '../../../helpers/saveToXML';\n// import { exportToJSON } from '../../../helpers/saveToJSON';\n// import PricesChart from './PricesChart';\n\n// const PricesData = () => {\n//     const [data, setData] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [filters, setFilters] = useState({\n//         year: '',\n//         region: '',\n//         surface: '',\n//         before: '',\n//         after: '',\n//         sort: '',\n//         sortAsc: '',\n//         oneYear: ''\n//     });\n\n//     const [filtersSubmitted, setFiltersSubmitted] = useState(false);\n//     const [showChart, setShowChart] = useState(false);\n//     const chartRef = useRef(null);\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n\n//     const fetchData = () => {\n//         const queryParams = new URLSearchParams();\n//         Object.keys(filters).forEach(key => {\n//             if (filters[key]) {\n//                 queryParams.append(key, filters[key]);\n//             }\n//         });\n//         request('GET', `/api/prices?${queryParams}`)\n//             .then(response => {\n//                 setData(response.data);\n//                 setLoading(false);\n\n//             })\n//             .catch(error => {\n//                 console.log('Error:', error);\n//                 setError(error.message);\n//                 setLoading(false);\n//             });\n//     };\n\n//     const handleFilterChange = (event) => {\n//         const { name, value } = event.target;\n//         setFilters({ ...filters, [name]: value });\n//     };\n\n//     const handleRadioChange = (event) => {\n//         const { name, value } = event.target;\n//         setFilters({ ...filters, [name]: value, before: '0', after: '0', oneYear: '0', [name]: value });\n//     };\n\n//     const handleRadioClick = (event) => {\n//         const { name } = event.target;\n//         if (filters[name]) {\n//             setFilters({ ...filters, [name]: '' });\n//         }\n//     };\n//     const handleFilterSubmit = (event) => {\n//         event.preventDefault();\n//         setLoading(true);\n//         fetchData();\n//         setFiltersSubmitted(true);\n//     };\n\n//     const handleExportToXML = () => {\n//         const xmlData = data.map(item => (\n//             `<item>\n//                 <region>${item.region}</region>\n//                 <quarter>${item.quarter}</quarter>\n//                 <type>${item.type}</type>\n//                 <surface>${item.surface}</surface>\n//                 <year>${item.year}</year>\n//                 <price>${item.price}</price>\n//             </item>\n//             `\n//         )).join('');\n\n//         exportToXML(`<data>${xmlData}</data>`, 'filtered_data');\n//     };\n\n\n//     const handleExportToJSON = () => {\n//         exportToJSON(data, 'filtered_data');\n//     };\n\n//     const handleDownloadChart = () => {\n//         if (chartRef.current) {\n//             chartRef.current.downloadChart();\n//         }\n//     };\n\n//     if (loading) {\n//         return <div>Ładowanie danych...</div>;\n//     }\n\n//     if (error) {\n//         return <div>Błąd: {error}</div>;\n//     }\n\n//     const anyFiltersActive = Object.values(filters).some(value => value !== '');\n\n\n//     return (\n//         <div>\n//             <p></p>\n//             <FiltersForm\n//                 filters={filters}\n//                 setFilters={setFilters}\n//                 fetchData={fetchData}\n//                 handleFilterChange={handleFilterChange}\n//                 handleFilterSubmit={handleFilterSubmit}\n//                 handleRadioChange={handleRadioChange}\n//                 handleRadioClick={handleRadioClick}\n//                 sortLabel=\"Sortowanie po cenie rosnąco\"\n//             />\n//             <p></p>\n//             <div className=\"form-container\">\n//                 <p className=\"lead\">Eksport danych</p>\n//                 <div class=\"row justify-content-start\">\n//                     <div class=\"col-6\"> <button className=\"submit-button full-width\" onClick={handleExportToXML}>Pobierz dane w formacje XML</button></div>\n//                     <div class=\"col-6\"><button className=\"submit-button full-width\" onClick={handleExportToJSON}>Pobierz dane w formacie JSON</button></div>\n//                 </div>\n//                 <p></p>\n//                 {filtersSubmitted && (\n//                     <div class=\"row justify-content-start\">\n\n//                         <div class=\"col-6\"><button className=\"submit-button violet-btn full-width\" onClick={() => setShowChart(!showChart)}>\n//                             {showChart ? 'Ukryj wykres' : 'Pokaż wykres'}\n//                         </button></div>\n//                         {showChart && (\n//                             <div class=\"col-6\">\n//                                 <button className=\"submit-button violet-btn full-width\" onClick={handleDownloadChart}>\n//                                     Pobierz wykres\n//                                 </button>\n//                             </div>\n//                         )}\n//                     </div>\n//                 )}\n//             </div>\n\n//             <div className=\"container\">\n//                 {showChart && <PricesChart data={data} ref={chartRef} />}\n//                 <p></p>\n\n//                 <table className=\"table\">\n//                     <thead>\n//                         <tr>\n//                             <th>Region</th>\n//                             <th>Rok</th>\n//                             <th>Kwartał</th>\n//                             <th>Typ mieszkania</th>\n//                             <th>Powierzchnia</th>\n\n//                             <th>Średnia cena (zł)</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {data.map(item => (\n//                             <tr key={`${item.id}`}>\n//                                 <td>{item.region}</td>\n//                                 <td>{item.year}</td>\n//                                 <td>{item.quarter}</td>\n//                                 <td>{item.type}</td>\n//                                 <td>{item.surface}</td>\n\n//                                 <td>{item.price}</td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div >\n//     );\n\n// };\n\n// export default PricesData;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { request } from '../../../axios_helper';\nimport FiltersForm from '../FiltersForm';\nimport { exportToXML } from '../../../helpers/saveToXML';\nimport { exportToJSON } from '../../../helpers/saveToJSON';\nimport PricesChart from './PricesChart';\n\nconst PricesData = () => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [filters, setFilters] = useState({\n        year: '',\n        region: '',\n        surface: '',\n        before: '',\n        after: '',\n        sort: '',\n        sortAsc: '',\n        oneYear: ''\n    });\n\n    const [filtersSubmitted, setFiltersSubmitted] = useState(false);\n    const [showChart, setShowChart] = useState(false);\n    const chartRef = useRef(null);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = () => {\n        const queryParams = new URLSearchParams();\n        Object.keys(filters).forEach(key => {\n            if (filters[key]) {\n                queryParams.append(key, filters[key]);\n            }\n        });\n        request('GET', `/api/prices?${queryParams}`)\n            .then(response => {\n                setData(response.data);\n                setLoading(false);\n            })\n            .catch(error => {\n                console.log('Error:', error);\n                setError(error.message);\n                setLoading(false);\n            });\n    };\n\n    const handleExportToXML = () => {\n        const xmlData = data.map(item => (\n            `<item>\n                <region>${item.region}</region>\n                <quarter>${item.quarter}</quarter>\n                <type>${item.type}</type>\n                <surface>${item.surface}</surface>\n                <year>${item.year}</year>\n                <price>${item.price}</price>\n            </item>`\n        )).join('');\n\n        exportToXML(`<data>${xmlData}</data>`, 'filtered_data');\n    };\n\n    const handleExportToJSON = () => {\n        exportToJSON(data, 'filtered_data');\n    };\n\n    const handleDownloadChart = () => {\n        if (chartRef.current) {\n            chartRef.current.downloadChart();\n        }\n    };\n\n    if (loading) {\n        return <div>Ładowanie danych...</div>;\n    }\n\n    if (error) {\n        return <div>Błąd: {error}</div>;\n    }\n\n    const anyFiltersActive = Object.values(filters).some(value => value !== '');\n\n    return (\n        <div>\n            <FiltersForm\n                filters={filters}\n                setFilters={setFilters}\n                fetchData={fetchData}\n                sortLabel=\"Sortowanie po cenie rosnąco\"\n            />\n            <div className=\"form-container\">\n                <p className=\"lead\">Eksport danych</p>\n                <div className=\"row justify-content-start\">\n                    <div className=\"col-6\">\n                        <button className=\"submit-button full-width\" onClick={handleExportToXML}>Pobierz dane w formacje XML</button>\n                    </div>\n                    <div className=\"col-6\">\n                        <button className=\"submit-button full-width\" onClick={handleExportToJSON}>Pobierz dane w formacie JSON</button>\n                    </div>\n                </div>\n                {filtersSubmitted && (\n                    <div className=\"row justify-content-start\">\n                        <div className=\"col-6\">\n                            <button className=\"submit-button violet-btn full-width\" onClick={() => setShowChart(!showChart)}>\n                                {showChart ? 'Ukryj wykres' : 'Pokaż wykres'}\n                            </button>\n                        </div>\n                        {showChart && (\n                            <div className=\"col-6\">\n                                <button className=\"submit-button violet-btn full-width\" onClick={handleDownloadChart}>\n                                    Pobierz wykres\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n            <div className=\"container\">\n                {showChart && <PricesChart data={data} ref={chartRef} />}\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Region</th>\n                            <th>Rok</th>\n                            <th>Kwartał</th>\n                            <th>Typ mieszkania</th>\n                            <th>Powierzchnia</th>\n                            <th>Średnia cena (zł)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map(item => (\n                            <tr key={item.id}>\n                                <td>{item.region}</td>\n                                <td>{item.year}</td>\n                                <td>{item.quarter}</td>\n                                <td>{item.type}</td>\n                                <td>{item.surface}</td>\n                                <td>{item.price}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default PricesData;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,OAAOC,WAAW,MAAM,gBAAgB;AACxC,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,OAAO,EAAEC,UAAU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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}